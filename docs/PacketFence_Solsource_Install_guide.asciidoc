Solsource Install Guide
=======================
:encoding: UTF-8
:lang: en
:doctype: book

include::includes/global-attributes.asciidoc[]

About this Guide
----------------
This guide has been created in order to help engineers from Solsource configure PacketFence with Stripe for user based billing


Assumptions
-----------
* You have a server with CentOS 6.7 *minimal* installed.
* You have 2 network cards on the server.
* The default role is throttled, the paid role is unthrottled.
* The management interface is on eth0 and has IP address 192.168.1.5
* The VLAN for the endpoints is 156 and the network associated to this VLAN is 172.21.156.0/24
** The IP address of PacketFence is 172.21.156.1 in this VLAN

Server setup
------------

Setup informations
~~~~~~~~~~~~~~~~~~

The inline setup in this guide uses :

* 2 network interfaces on your machine(1 for the Inline and another one to go out).
* a switch port in the management network for eth0.
* a switch port on a trunk (eth1) on which we tag VLAN 156 for our inline network
* The inline interface is eth1.156

The dynamic ACL setup in this guide uses :

* A Cisco Catalyst 2960 running IOS 15 and with IP address `172.21.2.3`

PacketFence repository install
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Execute the following command on your server : 

  # rpm -Uvh http://packetfence.org/downloads/PacketFence/RHEL6/`uname -i`/RPMS/packetfence-release-1-2.centos6.noarch.rpm

The repo information for the `packetfence` and `packetfence-devel` repos will be in the file : `/etc/yum.repos.d/packetfence.repo`

Installation of PacketFence
~~~~~~~~~~~~~~~~~~~~~~~~~~~

First, make sure you have the PacketFence repository installed as described above

Please execute the following on your server to download the packages :

  # cd /root
  # mkdir packetfence_packages && cd packetfence_packages
  # wget http://inverse.ca/downloads/PacketFence/RHEL6/feature/ss-billing/x86_64/RPMS/packetfence-config-5.4.1-0.20151117.el6.noarch.rpm
  # wget http://inverse.ca/downloads/PacketFence/RHEL6/feature/ss-billing/x86_64/RPMS/packetfence-5.4.1-0.20151117.el6.noarch.rpm

Now install them using :

  # yum localinstall packetfence*.rpm --enablerepo=packetfence-devel

Since these are development packages, we have a small bug that requires you to execute the following commands to make all PacketFence services start :

  # wget https://fingerbank.inverse.ca/api/v1/download-p0f-map?key=packetfence-users -O /usr/local/fingerbank/conf/fingerbank-p0f.fp
  # yum install perl-Scalar-List-Utils --enablerepo=packetfence-devel

Now restart the packetfence services :

  # service packetfence-config restart
  # service packetfence restart


Configuration
-------------

Here are the networks that will be used in the configuration below.

Please adjust accordingly.

    eth0: Management
    IP Address: 192.168.1.5
    Netmask: 255.255.255.0
    Gateway: 192.168.1.254

    eth1.156: Inline Layer 2
    IP Address: 172.21.156.1
    Netmask: 255.255.255.0
    DNS Servers: 8.8.8.8
    
Configure the Stripe source
~~~~~~~~~~~~~~~~~~~~~~~~~~~

*Stripe account*

First go on https://dashboard.stripe.com, create an account and login.

Next on the top right click 'Your account' then 'Account settings'.

Navigate to the 'API keys' tab and note your key and secret. The test key should be used when testing the configuration and the live key when putting the source in production.

image::docs/images/billing/stripe-api-keys.png[scaledwidth="100%",alt="Stripe API keys"]

*Configuring PacketFence*

Now, in the PacketFence administration interface, go in 'Configuration->Sources' and create a new source of type 'Billing -> Stripe'

image::docs/images/billing/stripe-packetfence-configuration.png[scaledwidth="100%",alt="Stripe PacketFence configuration"]

Where : 
[options="compact"]
* *Secret key* is the secret key you got from your Stripe account.
* *Publishable key* is the publishable key you got from your Stripe account.
* *Style* is whether you are doing a one-time charge or subscription based billing (recurring). See section 'Subscription based registration' below for details on how to configure it.
* *Currency* is the currency that will be used in the transactions.
* *Test mode* should be activated if you are using the test key and secret account.

Subscription based registration
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Billing tier
++++++++++++

Next, go in 'Configuration -> Billing tiers'

Click 'Add billing tier' and configure the following : 
* Billing tier : 'simple'
* Name : 'Illimited access'
* Description : 'Illimited access to the network'
* Price : '9.99'
* Role : 'paid'
* Access duration : '20 years'

Stripe configuration
++++++++++++++++++++

Then in your Stripe dashboard, you should go in 'Subscriptions -> Plans'.

Then create a new plan.

image::docs/images/billing/stripe-plan.png[scaledwidth="100%",alt="Stripe plan configuration"]

Where : 
[options="compact"]
* *ID* is the billing tier identifier. It is *important* that this matches the ID of the billing tier in PacketFence.
* *Amount* is the price of the plan. It is *important* that this matches the price of the billing tier in PacketFence.
* *Currency* is the currency that will be used in the transactions. It is *important* that this matches the currency of the Stripe source in PacketFence.
* *Interval* is the interval at which the customer should be billed. In the case of this example, it is monthly.


Receiving updates from Stripe
+++++++++++++++++++++++++++++

As the subscription can be cancelled by a user, you need to setup your PacketFence installation to receive updates from Stripe.

Updates are sent using HTTP requests on a public IP. 

You need to make sure that your PacketFence server is available through a public IP on port 80 and that your PacketFence server hostname resolves on the public domain.

Then, in Stripe, configure a 'Webhook' so Stripe informs PacketFence of any event that happens in this Stripe merchant account.

In order to do so go in 'Your Account -> Account Settings -> Webhooks' and click 'Add endpoint'.

image::docs/images/billing/stripe-webhook.png[scaledwidth="100%",alt="Stripe Webhook"]

Where : 
[options="compact"]
* *URL* is the URL to the PacketFence server. This should be http://YOUR_PORTAL_HOSTNAME/hook/billing/stripe
* *Mode* is whether this webhook is for testing mode or live mode 

Now everytime a user unsubscribes from a plan, PacketFence will be notified and will unregister that device from your network.


Configure PacketFence
~~~~~~~~~~~~~~~~~~~~~

Portal Profile
^^^^^^^^^^^^^^

Next, go in 'Configuration -> Portal Profiles -> default' 

Add the 'local' and 'stripe' source to the Portal profile.

Add the 'simple' billing tier to the Portal profile.

Device registration
^^^^^^^^^^^^^^^^^^^

Next, to allow devices to be registered via MAC address (for device that don't have a web brower, ex : XBOX), you need to activate the device registration.

Go in 'Configuration -> Registration'

Check 'Device registration'

Make sure 'Device registration role' is empty and save.

Next, you need to decide which MAC OUI are allowed to be registered on the device registration portal

This is done in `/usr/local/pf/conf/allowed_device_oui.txt`

You can empty the file to allow all MAC addresses to be registered on this portal (requires to restart httpd.portal)


Max device per user
^^^^^^^^^^^^^^^^^^^

To configure the maximum devices a user can own, go in 'Configuration -> Roles'

Then put 'Max nodes per user' to the desired amount for the roles 'default' and 'paid'.

Configure traffic shaping
~~~~~~~~~~~~~~~~~~~~~~~~~

First, we need to know what is the ID of the default category.

Go in 'Configuration -> Roles' and get the identifier associated to the 'default' category from the 'Id' column. In the case of this example, it will be 1.

In this example, the Inline interface is `eth1.156` and the management interface is `eth0`

Traffic shaping using tc is not reboot proof, thus requires the installation of the rules through a script executed at boot time.

Install the following script in `/etc/install_tc.sh`

  #!/bin/bash
  tc qdisc del dev eth0 root
  tc qdisc add dev eth0 root handle 1:0 htb default 1
  tc class add dev eth0 parent 1:0 classid 1:1 htb rate 1mbit ceil 1mbit
  # the second 1 in 1:1 represents the category ID
  tc qdisc add dev eth0 parent 1:1 sfq
  tc qdisc del dev eth1.156 root
  tc qdisc add dev eth1.156 root handle 1:0 htb default 1
  tc class add dev eth1.156 parent 1:0 classid 1:1 htb rate 1mbit ceil 1mbit
  # the second 1 in 1:1 represents the category ID
  tc qdisc add dev eth1.156 parent 1:1 sfq

Make the file executable `chmod +x /etc/install_tc.sh`

And add it to `/etc/rc.local` so it is executed at boot time

  echo "/etc/install_tc.sh" >> /etc/rc.local

Configuring another role
^^^^^^^^^^^^^^^^^^^^^^^^

Should you want to configure another role.

First, get his ID from the role page, will be using 2 in this example

Then the tc script should look like this. Note the class has changed to `1:2`

  #!/bin/bash
  tc qdisc del dev eth0 root
  tc qdisc add dev eth0 root handle 1:0 htb default 1
  tc class add dev eth0 parent 1:0 classid 1:1 htb rate 1mbit ceil 1mbit
  #### THIS LINE WAS ADDED
  tc class add dev eth0 parent 1:0 classid 1:2 htb rate 1mbit ceil 1mbit
  ####
  # the second 1 in 1:1 represents the category ID
  tc qdisc add dev eth0 parent 1:1 sfq
  #### THIS LINE WAS ADDED
  tc qdisc add dev eth0 parent 1:2 sfq
  ####
  tc qdisc del dev eth1.156 root
  tc qdisc add dev eth1.156 root handle 1:0 htb default 1
  tc class add dev eth1.156 parent 1:0 classid 1:1 htb rate 1mbit ceil 1mbit
  #### THIS LINE WAS ADDED
  tc class add dev eth1.156 parent 1:0 classid 1:2 htb rate 1mbit ceil 1mbit
  ####
  # the second 1 in 1:1 represents the category ID
  tc qdisc add dev eth1.156 parent 1:1 sfq
  #### THIS LINE WAS ADDED
  tc qdisc add dev eth1.156 parent 1:2 sfq
  ####

Configure the dynamic ACLs
~~~~~~~~~~~~~~~~~~~~~~~~~~

NOTE: This instructions have been taken from the administration guide and adjusted to the Solsource use case.

TIP: Use `show authentication sessions interface xxxx` to see the status of the VLAN and ACLs being applied to the Switch

[WARNING]
====
Make sure that you have a local account, because enabling 802.1X or MAB will ask for a username and password on the next login.
====

Global config settings 

  dot1x system-auth-control 
  ip device tracking

On each interface

  switchport mode access 
  switchport voice vlan 156 
  dot1x mac-auth-bypass 
  dot1x pae authenticator 
  dot1x port-control auto 
  dot1x timeout tx-period 5 
  dot1x reauthentication 
  authentication periodic 
  authentication timer restart 10800 
  authentication timer reauthenticate 7200 
  mab 
  no snmp trap link-status 

AAA Groups and Configuration 

  aaa new-model 
  aaa group server radius packetfence 
   server 192.168.1.5 auth-port 1812 acct-port 1813 
  aaa authentication login default local 
  aaa authentication dot1x default group packetfence 
  aaa authorization network default group packetfence 

Radius server configuration 

  radius-server host 192.168.1.5 auth-port 1812 acct-port 1813 timeout 2 key useStrongerSecret 
  radius-server vsa send authentication 

CoA configuration

  aaa server radius dynamic-author
   client 192.168.1.5 server-key useStrongerSecret
  port 3799

Activate SNMP on the switch:

  snmp-server community solsourcesnmp RO
  snmp-server community solsourcesnmp RW


Next, in PacketFence, go in 'Configuration -> Switches' and add a new Switch with the following parameters : 

Definition tab :
[options="compact"]
* Description : Solsource test Switch
* Type : Cisco Catalyst 2960
* Mode : production
* Dynamic Uplinks : checked

Roles tab :
[options="compact"]
* Role by VLAN ID : checked
* Assign the inline VLAN to all the roles (in the case of this example, 156)
* Role by access list : checked
* Add the following rules, 1 by line to the registration, default and paid roles access list : 
[options="compact"]
** permit ip any host 172.21.156.1
** deny ip 172.21.156.0 0.0.0.255
** permit ip any any

RADIUS tab :
[options="compact"]
* Secret Passphrase : useStrongerSecret

SNMP tab :
[options="compact"]
* Version : v2c
* Community Read : solsourcesnmp
* Community Write : solsourcesnmp

The resulting configuration in `/usr/local/pf/conf/switches.conf` should be :

  [172.21.2.3]
  mode=production
  description=Solsource test Switch
  type=Cisco::Catalyst_2960
  radiusSecret=useStrongerSecret
  defaultAccessList= <<EOT
  permit ip any host 172.21.156.1
  deny ip any 172.21.156.0 0.0.0.255
  permit ip any any
  EOT
  guestVlan=156
  paidVlan=156
  isolationVlan=156
  gamingVlan=156
  registrationVlan=156
  AccessListMap=Y
  defaultVlan=156
  inlineVlan=156
  macDetectionVlan=156
  voiceVlan=156
  RoleMap=N
  paidAccessList= <<EOT
  permit ip any host 172.21.156.1
  deny ip any 172.21.156.0 0.0.0.255
  permit ip any any
  EOT
  registrationAccessList= <<EOT
  permit ip any host 172.21.156.1
  deny ip any 172.21.156.0 0.0.0.255
  permit ip any any
  EOT
  SNMPCommunityRead=solsourcesnmp
  SNMPCommunityWrite=solsourcesnmp
  SNMPVersion=2c

The access lists above can be adjusted to your needs, right now it refuses access to any device in the endpoints VLAN. 
A permit is added for every user owned device and for the PacketFence IP address.
Then a permit is added for any other address to allow internet access.

Example result : 

  lab2#show authentication sessions int f0/1
              Interface:  FastEthernet0/1
            MAC Address:  c860.0050.ffff
             IP Address:  172.21.156.37
              User-Name:  c8600050cf25
                 Status:  Authz Success
                 Domain:  DATA
         Oper host mode:  single-host
       Oper control dir:  both
          Authorized By:  Authentication Server
            Vlan Policy:  156
           Per-User ACL:  permit ip any host 172.21.156.223
           Per-User ACL:  permit ip any host 172.21.156.37
           Per-User ACL:  permit ip any host 172.21.156.1
           Per-User ACL:  deny ip any 172.21.156.0 0.0.0.255
           Per-User ACL:  permit ip any any
        Session timeout:  1800s (local), Remaining: 668s
         Timeout action:  Reauthenticate
           Idle timeout:  N/A
      Common Session ID:  AC1414C000004C3E66C519B4
        Acct Session ID:  0x00004C43
                 Handle:  0x00000C56

  Runnable methods list:
         Method   State
         dot1x    Failed over
         mab      Authc Success

Testing
~~~~~~~

NOTE: packetfence.log will provide detailed informations on what is currently happening.

Registering a device
^^^^^^^^^^^^^^^^^^^^

Connect a device to your network.

You should receive a RADIUS request in `/usr/local/pf/logs/radius.log`. The response should be with VLAN 156.

The following access lists should be applied : 

  permit ip any host 172.21.156.1
  deny ip any 172.21.156.0 0.0.0.255
  permit ip any any

You should be prompted with the Captive portal.

You can create an account or reuse any existing local account (shown in 'Users' in the Administration interface)

An account will be created with the role 'default' and assigns the role 'default' to the device that is registered.

Using a local account will assign the role that is assigned to the user to the device (shown in the 'Actions' tab when viewing the details of a user)

Modifying the access level
^^^^^^^^^^^^^^^^^^^^^^^^^^

To modify their access level, a user should go on https://PORTAL_HOSTNAME/status

You then need to login with the local account credentials.

The button 'Modify your access' redirects to the billing section.

Select the plan and proceed to payment.

Now, the role assigned to the user will be 'paid' and all the devices he has registered will now have the role 'paid'

Managing devices
^^^^^^^^^^^^^^^^

This is done on the status page also via the button 'Add a device' and the user can unregister his devices from there.

Cancelling subscription
^^^^^^^^^^^^^^^^^^^^^^^

In the Stripe dashboard, go in 'Customers' and select the customer.

In his subscription list, you can cancel it.

If the webhooks are properly working between Stripe and your PacketFence server, the user devices will be downgraded to the role 'default' and the user will be downgraded to the role 'default'


Adding another device
^^^^^^^^^^^^^^^^^^^^^

Next, add another device using either the Status page or by registering it with the same username.

After its registration is complete you should see that the ACLs have been adjusted to allow the user devices to communicate with each other.

In this example, the 2 devices IPs are `172.21.156.11` and `172.21.156.12`

Both switchport ACLs should be modified to the following

  permit ip any host 172.21.156.11
  permit ip any host 172.21.156.12
  permit ip any host 172.21.156.1
  deny ip any 172.21.156.0 0.0.0.255
  permit ip any any



